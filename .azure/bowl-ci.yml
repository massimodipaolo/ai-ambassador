trigger: none
#trigger:
#  branches:
#    include:
#      - master
#  paths:
#    include:
#      - src/bowl
#      - ./*.json

variables:
  zipArtifactFilePath: $(Build.ArtifactStagingDirectory)/bowl.zip

pool:
  vmImage: ubuntu-latest

jobs:
  - job: build
    displayName: Build
    steps:
      - task: NodeTool@0
        displayName: Set Node Version
        inputs:
          versionSource: "spec"
          versionSpec: "18.16.0"
      - script: |
          npm ci
          npm run build:bowl
        displayName: 'npm install and build'
      - task: CopyFiles@2
        displayName: Copy dist artifact
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/src/bowl/payload/dist/'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
          CleanTargetFolder: false
      - task: CopyFiles@2
        displayName: Copy build folder to artifact
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/src/bowl/payload/build'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/build'
          CleanTargetFolder: false
      - task: CopyFiles@2
        displayName: Copy .env files to artifact
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/src/bowl/payload/'
          Contents: |
            .env
            .env.production
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
          CleanTargetFolder: false
      - task: CopyFiles@2
        displayName: Copy node modules
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/node_modules'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/node_modules'
          CleanTargetFolder: false
      - task: ArchiveFiles@2
        displayName: Archive zip web app
        inputs:
          rootFolderOrFile: "$(Build.ArtifactStagingDirectory)"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(zipArtifactFilePath)"
          replaceExistingArchive: true
      - task: PublishPipelineArtifact@1
        displayName: Publish web app artifact
        inputs:
          targetPath: '$(zipArtifactFilePath)'
          artifact: 'bowl'
          publishLocation: 'pipeline'
